;;; package --- init-meow
;;; Commentary:
;;; Code:
(defun meow-setup ()
  (setq meow-cheatsheet-layout meow-cheatsheet-layout-dvp)
  (meow-leader-define-key
   '("?" . meow-cheatsheet))
  (meow-motion-overwrite-define-key
   ;; custom keybinding for motion state
   '("<escape>" . ignore))
  (meow-normal-define-key
   '("?" . meow-cheatsheet)
   '("*" . meow-expand-0)
   '("=" . meow-expand-9)
   '("!" . meow-expand-8)
   '("[" . meow-expand-7)
   '("]" . meow-expand-6)
   '("{" . meow-expand-5)
   '("+" . meow-expand-4)
   '("}" . meow-expand-3)
   '(")" . meow-expand-2)
   '("(" . meow-expand-1)
   '("1" . digit-argument)
   '("2" . digit-argument)
   '("3" . digit-argument)
   '("4" . digit-argument)
   '("5" . digit-argument)
   '("6" . digit-argument)
   '("7" . digit-argument)
   '("8" . digit-argument)
   '("9" . digit-argument)
   '("0" . digit-argument)
   '("-" . negative-argument)
   '(";" . meow-reverse)
   '("," . meow-inner-of-thing)
   '("." . meow-bounds-of-thing)
   '("<" . meow-beginning-of-thing)
   '(">" . meow-end-of-thing)
   '("a" . meow-append)
   '("A" . meow-open-below)
   '("b" . meow-back-word)
   '("B" . meow-back-symbol)
   '("c" . meow-change)
   '("d" . meow-delete)
   '("D" . meow-backward-delete)
   '("e" . meow-line)
   '("E" . meow-goto-line)
   '("f" . meow-find)
   '("g" . meow-cancel-selection)
   '("G" . meow-grab)
   '("h" . meow-left)
   '("H" . meow-left-expand)
   '("i" . meow-insert)
   '("I" . meow-open-above)
   '("j" . meow-join)
   '("k" . meow-kill)
   '("l" . meow-till)
   '("m" . meow-mark-word)
   '("M" . meow-mark-symbol)
   '("n" . meow-next)
   '("N" . meow-next-expand)
   '("o" . meow-block)
   '("O" . meow-to-block)
   '("p" . meow-prev)
   '("P" . meow-prev-expand)
   '("q" . meow-quit)
   '("r" . meow-replace)
   '("R" . meow-swap-grab)
   '("s" . meow-search)
   '("t" . meow-right)
   '("T" . meow-right-expand)
   '("u" . meow-undo)
   '("U" . meow-undo-in-selection)
   '("v" . meow-visit)
   '("w" . meow-next-word)
   '("W" . meow-next-symbol)
   '("x" . meow-save)
   '("X" . meow-sync-grab)
   '("y" . meow-yank)
   '("z" . meow-pop-selection)
   '("'" . repeat)
   '("<escape>" . ignore)))

(use-package meow
  :ensure t
  :custom
  (meow-expand-hint-counts '((word . 0)
                             (line . 10)
                             (block . 10)
                             (find . 10)
                             (till . 10)))
  (meow-mode-state-list '((authinfo-mode . normal)
                          (beancount-mode . normal)
                          (bibtex-mode . normal)
                          (cider-repl-mode . normal)
                          (cider-test-report-mode . normal)
                          (cider-browse-spec-view-mode . motion)
                          (cargo-process-mode . normal)
                          (conf-mode . normal)
                          (deadgrep-edit-mode . normal)
                          (deft-mode . normal)
                          (diff-mode . normal)
                          (ediff-mode . motion)
                          (gud-mode . normal)
                          (haskell-interactive-mode . normal)
                          (help-mode . normal)
                          (helpful-mode . normal)
                          (json-mode . normal)
                          (jupyter-repl-mode . normal)
                          (mix-mode . normal)
                          (occur-edit-mode . normal)
                          (pass-view-mode . normal)
                          (prog-mode . normal)
                          (py-shell-mode . normal)
                          (restclient-mode . normal)
                          (telega-chat-mode . normal)
                          (term-mode . normal)
                          (text-mode . normal)
                          (vterm-mode . insert)
                          (Custom-mode . normal)))
  :config
  (meow-setup)
  (meow-global-mode 1))

(provide 'init-meow)
;;; init-meow.el ends here
